using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace DDY_GJM_23
{
    // A tile the player and enemies travel over.
    public class WorldTile : MonoBehaviour
    {
        // The collider for the floor tile.
        public new BoxCollider2D collider;

        // The physics material for this floor tile.
        public PhysicsMaterial2D physicsMaterial;

        // TODO: work on tile physics for movement.

        // Start is called before the first frame update
        void Start()
        {

        }

        // TriggerEnter2D
        private void OnTriggerEnter2D(Collider2D collision)
        {
            // Checks for a combat entity.
            Combatant combatEntity = null;

            // Checks if the collision object is a combat entity.
            if(collision.TryGetComponent(out combatEntity))
            {
                // Sets this as the current tile.
                if(!combatEntity.currentTiles.Contains(this))
                    combatEntity.currentTiles.Add(this);
            }
        }

        // OnTriggerStay2D
        private void OnTriggerStay2D(Collider2D collision)
        {
            // Checks for a combat entity.
            Combatant combatEntity = null;

            // Checks if the collision object is a combat entity.
            if (collision.TryGetComponent(out combatEntity))
            {
                // This is meant to address problems where the entity is standing on multiple tiles at once.
                // The tile that the entity entered last is the physics tile.

                // Sets this as the current tile.
                if(combatEntity.currentTiles.Contains(this))
                    combatEntity.currentTiles.Remove(this);
            }
        }

        // TriggerExit2D
        private void OnTriggerExit2D(Collider2D collision)
        {
            // Checks for a combat entity.
            Combatant combatEntity = null;

            // Checks if the collision object is a combat entity.
            if (collision.TryGetComponent(out combatEntity))
            {
                // Clears out the tile.
                if(combatEntity.currentTiles.Contains(this))
                    combatEntity.currentTiles.Remove(this);
            }
        }

        // Returns the amount of friction generated by this tile. The higher the fraction, the less that the entity moves.
        public float GetFriction()
        {
            // The friction for the movement.
            float friction = 0.0F;

            // Checks if the physics material exists or not.
            if(physicsMaterial != null)
            {
                friction = physicsMaterial.friction;
            }
            else
            {
                // Defaults to 1.0F
                friction = 1.0F;
            }

            // Return the friction.
            return friction;
        }

        // Update is called once per frame
        void Update()
        {

        }
    }
}